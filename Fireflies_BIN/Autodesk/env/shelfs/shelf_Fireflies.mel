global proc shelf_Fireflies () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Maya To Usd" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Usd Converter Maya To Usd" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/Christopher_LUCAS/Fireflies/asset_checker/asset_checker/logo.png" 
        -image1 "R:/Christopher_LUCAS/Fireflies/asset_checker/asset_checker/logo.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import os\nimport maya.cmds as cmds \nimport maya.mel as mel \n\nimport mayaUsd\nimport mayaUsdCacheMayaReference\nfrom mayaUsdLibRegisterStrings import getMayaUsdLibString\nimport mayaUsd.ufe\nimport mayaUsdMergeToUsd\n\nimport ufe \nimport mayaUsdOptions\n\nfrom pxr import Usd, Sdf\n\nfrom functools import partial\n\n\nclass maya_to_usd():\n    def __init__(self):\n        super(maya_to_usd, self).__init__()\n    \n    # def find_sel(self):\n    #     sel = cmds.ls(sl=True)\n    #     mesh = sel[0]\n    #     print(mesh)\n    #     return mesh\n\n    def converter(self):\n        self.sel = cmds.ls(sl=True)\n        if self.sel == \"\":\n            print(\"No mesh selected\")\n            return\n        self.mesh = self.sel[0]\n        # print(self.mesh)\n        anon = Sdf.Layer.CreateAnonymous(\"test\")\n        proxyShape = cmds.createNode('mayaUsdProxyShape', skipSelect=True, name= f\"{self.mesh}_asset\")\n        # print(cmds.ls(type = \"mayaUsdProxyShape\"))\n        cmds.select(proxyShape, replace=True)\n        fullPath = cmds.ls(proxyShape, long=True)\n        print(fullPath)\n        \n        stage = Usd.Stage.Open(r'D:\\chris\\asset_checker\\test_scenes\\usd_sphere_sample.usda')\n        stage.GetRootLayer().ExportToString()\n        return fullPath[0]\n        # return self.stage\n    \n    def test_anon(self):\n        layer = Sdf.Layer.CreateAnonymous(\"test\")\n\n        stage = Usd.Stage.Open(layer)\n        print(stage)\n\n        print(layer.identifier)\n\n        # save stage\n        stage.GetRootLayer().Export(r'D:\\chris\\asset_checker\\test_scenes\\usd_sphere_sample.usda')\n\n    def test(self):\n    \n        print(self.stage)\n        \n    def main(self):\n        self.converter()\n        self.test()\n\ntest = maya_to_usd()\n\ntest.test_anon()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
